{
 "7": "    @clear_session({'spanId': 7})\n    def test_07_get_(self):\n        # GET http://httpbin.org/ (endp 7)\n        httpbin_org = get_http_target('TARGET_HTTPBIN_ORG', authenticate)\n        resp = httpbin_org.get('/')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('div.swagger-ui div.wrapper section.block.block-desktop div h2', expected_value='Other Utilities')\n        # resp.assert_cssselect('html head title', expected_value='httpbin.org')\n\n",
 "39": "    @clear_session({'spanId': 39})\n    def test_39_get_(self):\n        # GET http://trdemo.stg.testr.io/ (endp 39)\n        trdemo_stg_testr_io = get_http_target('TARGET_TRDEMO_STG_TESTR_IO', authenticate)\n        resp = trdemo_stg_testr_io.get('/')\n        resp.assert_ok()\n        # resp.assert_status_code(307)\n\n",
 "5": "    @clear_session({'spanId': 5})\n    def test_05_get_(self):\n        # GET https://trdemo.stg.testr.io/ (endp 5)\n        trdemo_stg_testr_io = get_http_target('TARGET_TRDEMO_STG_TESTR_IO', authenticate)\n        resp = trdemo_stg_testr_io.get('/')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('div.container-fluid div h1', expected_value='Welcome!')\n        # resp.assert_cssselect('html head title', expected_value=' TestR Demo app ')\n\n",
 "35": "    @clear_session({'spanId': 35})\n    def test_35_get_(self):\n        # GET https://trdemo.stg.testr.io/ (endp 35)\n        trdemo_stg_testr_io = get_http_target('TARGET_TRDEMO_STG_TESTR_IO', authenticate)\n        resp = trdemo_stg_testr_io.get('/')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('div.container-fluid div h1', expected_value='Welcome!')\n        # resp.assert_cssselect('html head title', expected_value=' TestR Demo app ')\n\n",
 "6": "    # authentication-related test\n    @clear_session({'spanId': 6})\n    def test_06_get_login(self):\n        # GET https://trdemo.stg.testr.io/login (endp 6)\n        trdemo_stg_testr_io = get_http_target('TARGET_TRDEMO_STG_TESTR_IO', dummy_auth)\n        resp = trdemo_stg_testr_io.get('/login')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('div#logreg-forms h1.h3.font-weight-normal', expected_value=' Select user (temp) ')\n        # resp.assert_cssselect('html head title', expected_value=' TestR Demo app ')\n\n",
 "37": "    # authentication-related test\n    @json_dataset('data/dataset_37.json')\n    @clear_session({'spanId': 37})\n    def test_37_post_login(self, data_row):\n        user, = data_row\n\n        # POST https://trdemo.stg.testr.io/login (endp 37)\n        trdemo_stg_testr_io = get_http_target('TARGET_TRDEMO_STG_TESTR_IO', dummy_auth)\n        resp = trdemo_stg_testr_io.post('/login', data=[('user', user)])\n        resp.assert_ok()\n        # resp.assert_status_code(302)\n\n",
 "38": "    @json_dataset('data/dataset_38.json')\n    @clear_session({'spanId': 38})\n    def test_38_get_search(self, data_row):\n        startDate, = data_row\n\n        # GET https://trdemo.stg.testr.io/search (endp 38)\n        trdemo_stg_testr_io = get_http_target('TARGET_TRDEMO_STG_TESTR_IO', authenticate)\n        qstr = '?' + urlencode([('destination', '*'), ('endDate', ''), ('source', '*'), ('startDate', startDate)])\n        resp = trdemo_stg_testr_io.get('/search' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('div#flightsearch-form form.form-search h1.h3.font-weight-normal', expected_value=' Search Flights')\n        # resp.assert_cssselect('html head title', expected_value=' TestR Demo app ')\n\n",
 "8": "    @clear_session({'spanId': 8})\n    def test_08_get_(self):\n        # GET https://stg.testr.io/ (endp 8)\n        stg_testr_io = get_http_target('TARGET_STG_TESTR_IO', authenticate)\n        resp = stg_testr_io.get('/')\n        resp.assert_ok()\n        # resp.assert_status_code(302)\n\n",
 "14": "    @clear_session({'spanId': 14})\n    def test_14_get_(self):\n        # GET https://www.il.kayak.com/ (endp 14)\n        www_il_kayak_com = get_http_target('TARGET_WWW_IL_KAYAK_COM', authenticate)\n        qstr = '?' + urlencode([('ispredir', 'true')])\n        resp = www_il_kayak_com.get('/' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('div#ptn1 h1.SeoLinksHeader__subtitle', expected_value='Search Flights, Hotels & Rental Cars')\n        # resp.assert_cssselect('html head title', expected_value='Search Flights, Hotels & Rental Cars | KAYAK')\n\n",
 "15": "    @json_dataset('data/dataset_15.json')\n    @clear_session({'spanId': 15})\n    def test_15_post_s_horizon_common_ccpa_CCPAConsent(self, data_row):\n        r9version, scriptsMetadata, stylesMetadata = data_row\n\n        # POST https://www.il.kayak.com/s/horizon/common/ccpa/CCPAConsent (endp 15)\n        www_il_kayak_com = get_http_target('TARGET_WWW_IL_KAYAK_COM', authenticate)\n        resp = www_il_kayak_com.post('/s/horizon/common/ccpa/CCPAConsent', data=[('r9version', r9version), ('scriptsMetadata', scriptsMetadata), ('stylesMetadata', stylesMetadata)], headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(204)\n\n",
 "16": "    @json_dataset('data/dataset_16.json')\n    @clear_session({'spanId': 16})\n    def test_16_post_s_horizon_common_core_AjaxMany(self, data_row):\n        components__, formtoken, parameters__ = data_row\n\n        # POST https://www.il.kayak.com/s/horizon/common/core/AjaxMany (endp 16)\n        www_il_kayak_com = get_http_target('TARGET_WWW_IL_KAYAK_COM', authenticate)\n        resp = www_il_kayak_com.post('/s/horizon/common/core/AjaxMany', data=[('components[]', components__), ('formtoken', formtoken), ('parameters[]', parameters__)], headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "17": "    @clear_session({'spanId': 17})\n    def test_17_post_s_horizon_compareTo_config(self):\n        # POST https://www.il.kayak.com/s/horizon/compareTo/config (endp 17)\n        www_il_kayak_com = get_http_target('TARGET_WWW_IL_KAYAK_COM', authenticate)\n        resp = www_il_kayak_com.post('/s/horizon/compareTo/config', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.content.workaround.name', expected_value='SwapperNoSpinner')\n\n",
 "18": "    @clear_session({'spanId': 18})\n    def test_18_get_s_horizon_react_component_CurrencyPickerStateProviderAction(self):\n        # GET https://www.il.kayak.com/s/horizon/react/component/CurrencyPickerStateProviderAction (endp 18)\n        www_il_kayak_com = get_http_target('TARGET_WWW_IL_KAYAK_COM', authenticate)\n        resp = www_il_kayak_com.get('/s/horizon/react/component/CurrencyPickerStateProviderAction', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.current.displayName', expected_value='Israeli New Shekels')\n\n",
 "19": "    @clear_session({'spanId': 19})\n    def test_19_get_s_horizon_react_component_FooterSiteMapLinksProviderAction(self):\n        # GET https://www.il.kayak.com/s/horizon/react/component/FooterSiteMapLinksProviderAction (endp 19)\n        www_il_kayak_com = get_http_target('TARGET_WWW_IL_KAYAK_COM', authenticate)\n        resp = www_il_kayak_com.get('/s/horizon/react/component/FooterSiteMapLinksProviderAction', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "20": "    @clear_session({'spanId': 20})\n    def test_20_get_s_horizon_react_component_PrivacyMenuStateProviderAction(self):\n        # GET https://www.il.kayak.com/s/horizon/react/component/PrivacyMenuStateProviderAction (endp 20)\n        www_il_kayak_com = get_http_target('TARGET_WWW_IL_KAYAK_COM', authenticate)\n        resp = www_il_kayak_com.get('/s/horizon/react/component/PrivacyMenuStateProviderAction', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "21": "    @json_dataset('data/dataset_21.json')\n    @clear_session({'spanId': 21})\n    def test_21_post_s_run_kmkid_set(self, data_row):\n        kmkid, = data_row\n\n        # POST https://www.il.kayak.com/s/run/kmkid/set (endp 21)\n        www_il_kayak_com = get_http_target('TARGET_WWW_IL_KAYAK_COM', authenticate)\n        resp = www_il_kayak_com.post('/s/run/kmkid/set', data=[('kmkid', kmkid)], headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(204)\n\n",
 "22": "    @json_dataset('data/dataset_22.json')\n    @clear_session({'spanId': 22})\n    def test_22_post_s_vestigo_v1_measure(self, data_row):\n        clientRequestTime, domain, eventName, eventObject, eventType, height, npmPackageVersion, queryString, subPageType, timestamp, viewId, width = data_row\n\n        # POST https://www.il.kayak.com/s/vestigo/v1/measure (endp 22)\n        www_il_kayak_com = get_http_target('TARGET_WWW_IL_KAYAK_COM', authenticate)\n        with open('data/payload_for_endp_22.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.events.[*].context.client.npmPackageVersion', npmPackageVersion)\n        apply_into_json(json_payload, '$.events.[*].context.client.windowSize.height', height)\n        apply_into_json(json_payload, '$.events.[*].context.client.windowSize.width', width)\n        apply_into_json(json_payload, '$.events.[*].context.domain', domain)\n        apply_into_json(json_payload, '$.events.[*].context.location.queryString', queryString)\n        apply_into_json(json_payload, '$.events.[*].context.viewCode.subPageType', subPageType)\n        apply_into_json(json_payload, '$.events.[*].context.viewId', viewId)\n        apply_into_json(json_payload, '$.events.[*].eventName', eventName)\n        apply_into_json(json_payload, '$.events.[*].eventType', eventType)\n        apply_into_json(json_payload, '$.events.[*].payload.eventObject', eventObject)\n        apply_into_json(json_payload, '$.events.[*].timestamp', timestamp)\n        apply_into_json(json_payload, '$.headers.clientRequestTime', clientRequestTime)\n        resp = www_il_kayak_com.post('/s/vestigo/v1/measure', json=json_payload, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(204)\n\n",
 "23": "    @clear_session({'spanId': 23})\n    def test_23_get_ugtm_(self):\n        # GET https://www.il.kayak.com/ugtm/ (endp 23)\n        www_il_kayak_com = get_http_target('TARGET_WWW_IL_KAYAK_COM', authenticate)\n        qstr = '?' + urlencode([('ispredir', 'true')])\n        resp = www_il_kayak_com.get('/ugtm/' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "25": "    @json_dataset('data/dataset_25.json')\n    @clear_session({'spanId': 25})\n    def test_25_post_vs_main_frontdoor_IsNi_covidExplore_shown(self, data_row):\n        IsNi, = data_row\n\n        # POST https://www.il.kayak.com/vs/main/frontdoor/{IsNi}/covidExplore/shown (endp 25)\n        www_il_kayak_com = get_http_target('TARGET_WWW_IL_KAYAK_COM', authenticate)\n        resp = www_il_kayak_com.post(f'/vs/main/frontdoor/{IsNi}/covidExplore/shown', data=[('action', 'vs')], headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(204)\n\n",
 "24": "    @clear_session({'spanId': 24})\n    def test_24_post_vs_main_frontdoor_EmailSubscriptionPanel_show(self):\n        # POST https://www.il.kayak.com/vs/main/frontdoor/EmailSubscriptionPanel/show (endp 24)\n        www_il_kayak_com = get_http_target('TARGET_WWW_IL_KAYAK_COM', authenticate)\n        resp = www_il_kayak_com.post('/vs/main/frontdoor/EmailSubscriptionPanel/show', data=[('action', 'vs')], headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(204)\n\n",
 "26": "    @clear_session({'spanId': 26})\n    def test_26_post_vs_main_frontdoor_saving_loaded_drawer(self):\n        # POST https://www.il.kayak.com/vs/main/frontdoor/saving/loaded/drawer (endp 26)\n        www_il_kayak_com = get_http_target('TARGET_WWW_IL_KAYAK_COM', authenticate)\n        resp = www_il_kayak_com.post('/vs/main/frontdoor/saving/loaded/drawer', data=[('action', 'vs'), ('searchid', 'undefined')])\n        resp.assert_ok()\n        # resp.assert_status_code(204)\n\n",
 "27": "    @clear_session({'spanId': 27})\n    def test_27_post_vs_page_main_frontdoor(self):\n        # POST https://www.il.kayak.com/vs/page/main/frontdoor (endp 27)\n        www_il_kayak_com = get_http_target('TARGET_WWW_IL_KAYAK_COM', authenticate)\n        resp = www_il_kayak_com.post('/vs/page/main/frontdoor', data=[('action', 'vs')], headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(204)\n\n",
 "12": "    @clear_session({'spanId': 12})\n    def test_12_get_(self):\n        # GET https://www.kayak.com/ (endp 12)\n        www_kayak_com = get_http_target('TARGET_WWW_KAYAK_COM', authenticate)\n        resp = www_kayak_com.get('/')\n        resp.assert_ok()\n        # resp.assert_status_code(302)\n\n",
 "13": "    @json_dataset('data/dataset_13.json')\n    @clear_session({'spanId': 13})\n    def test_13_post_s_run_kmkid_sync(self, data_row):\n        suggestedKmkid, = data_row\n\n        # POST https://www.kayak.com/s/run/kmkid/sync (endp 13)\n        www_kayak_com = get_http_target('TARGET_WWW_KAYAK_COM', authenticate)\n        resp = www_kayak_com.post('/s/run/kmkid/sync', data=[('suggestedKmkid', suggestedKmkid)])\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "1": "    @json_dataset('data/dataset_1.json')\n    @clear_session({'spanId': 1})\n    def test_01_post_param(self, data_row):\n        aftp, atyp, ei, fld, m, me, mem, net, param, pv, rt, sys_, wh = data_row\n\n        # POST https://www.google.com/{param} (endp 1)\n        www_google_com = get_http_target('TARGET_WWW_GOOGLE_COM', authenticate)\n        qstr = '?' + urlencode([('adh', ''), ('aftp', aftp), ('atyp', atyp), ('bl', 'ETbN'), ('conn', 'onchange'), ('ct', 'slh'), ('ei', ei), ('fld', fld), ('ima', '0'), ('imad', '0'), ('ime', '1'), ('imea', '0'), ('imeb', '0'), ('imeh', '1'), ('imex', '1'), ('imn', '2'), ('m', m), ('me', me), ('mem', mem), ('net', net), ('pv', pv), ('rt', rt), ('s', 'web'), ('scp', '0'), ('sto', ''), ('sys', sys_), ('t', 'all'), ('v', 't1'), ('wh', wh), ('zx', str(int(time.time() * 1000)))])\n        resp = www_google_com.post(f'/{param}' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(204)\n\n",
 "2": "    @json_dataset('data/dataset_2.json')\n    @clear_session({'spanId': 2})\n    def test_02_get_search(self, data_row):\n        aqs, ie = data_row\n\n        # GET https://www.google.com/search (endp 2)\n        www_google_com = get_http_target('TARGET_WWW_GOOGLE_COM', authenticate)\n        qstr = '?' + urlencode([('aqs', aqs), ('ie', ie), ('oq', 'trdemo.stg'), ('q', 'trdemo.stg'), ('sourceid', 'chrome')])\n        resp = www_google_com.get('/search' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('div h1', expected_value='\u05e7\u05d9\u05e9\u05d5\u05e8\u05d9 \u05e0\u05d2\u05d9\u05e9\u05d5\u05ea')\n        # resp.assert_cssselect('html head title', expected_value='trdemo.stg - \u05d7\u05d9\u05e4\u05d5\u05e9 \u05d1-Google')\n\n",
 "29": "    @json_dataset('data/dataset_29.json')\n    @clear_session({'spanId': 29})\n    def test_29_get_action_0(self, data_row):\n        ti, = data_row\n\n        # GET https://bat.bing.com/action/0 (endp 29)\n        bat_bing_com = get_http_target('TARGET_BAT_BING_COM', authenticate)\n        qstr = '?' + urlencode([('Ver', '2'), ('ti', ti)])\n        resp = bat_bing_com.get('/action/0' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(204)\n\n",
 "32": "    @clear_session({'spanId': 32})\n    def test_32_get_activityi(self):\n        # GET https://5142311.fls.doubleclick.net/activityi (endp 32)\n        _5142311_fls_doubleclick_net = get_http_target('TARGET__5142311_FLS_DOUBLECLICK_NET', authenticate)\n        resp = _5142311_fls_doubleclick_net.get('/activityi')\n        resp.assert_ok()\n        # resp.assert_status_code(302)\n\n",
 "57": "    @clear_session({'spanId': 57})\n    def test_57_get_admin_config(self):\n        # GET http://trcc-api-service.tradmin/admin/config (endp 57)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        resp = trcc_api_service_tradmin.get('/admin/config')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.organizationName', expected_value='roee')\n\n",
 "63": "    @json_dataset('data/dataset_63.json')\n    @clear_session({'spanId': 63})\n    def test_63_post_admin_imageVersion(self, data_row):\n        imagePath, = data_row\n\n        # POST http://trcc-api-service.tradmin/admin/imageVersion (endp 63)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        with open('data/payload_for_endp_63.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.imagePath', imagePath)\n        resp = trcc_api_service_tradmin.post('/admin/imageVersion', json=json_payload)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "67": "    @clear_session({'spanId': 67})\n    def test_67_get_admin_whoami(self):\n        # GET http://trcc-api-service.tradmin/admin/whoami (endp 67)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        resp = trcc_api_service_tradmin.get('/admin/whoami')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.organizationName', expected_value='roee')\n\n",
 "64": "    @json_dataset('data/dataset_64.json')\n    @clear_session({'spanId': 64})\n    def test_64_get_agents_agentId_injectorConfig(self, data_row):\n        agentId, = data_row\n\n        # GET http://trcc-api-service.tradmin/agents/{agentId}/injectorConfig (endp 64)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        resp = trcc_api_service_tradmin.get(f'/agents/{agentId}/injectorConfig')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "40": "    @json_dataset('data/dataset_40.json')\n    @clear_session({'spanId': 40})\n    def test_40_post_agents_agentId_verifyTargets(self, data_row):\n        agentId, targetKey, value = data_row\n\n        # POST http://trcc-api-service.tradmin/agents/{agentId}/verifyTargets (endp 40)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        with open('data/payload_for_endp_40.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.targetMapping.[*].targetKey', targetKey)\n        apply_into_json(json_payload, '$.targetMapping.[*].value', value)\n        resp = trcc_api_service_tradmin.post(f'/agents/{agentId}/verifyTargets', json=json_payload)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.status', expected_value='COMPLETED')\n\n",
 "58": "    @clear_session({'spanId': 58})\n    def test_58_post_models_modelSettings(self):\n        # POST http://trcc-api-service.tradmin/models/modelSettings (endp 58)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        with open('data/payload_for_endp_58.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        resp = trcc_api_service_tradmin.post('/models/modelSettings', json=json_payload)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.[*].settings.git.repository', expected_value='gadotroee/tests')\n\n",
 "41": "    @json_dataset('data/dataset_41.json')\n    @clear_session({'spanId': 41})\n    def test_41_get_models_roee_param_all(self, data_row):\n        param, = data_row\n\n        # GET http://trcc-api-service.tradmin/models/roee/{param}/all (endp 41)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        resp = trcc_api_service_tradmin.get(f'/models/roee/{param}/all')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.contracts.[*].customer', expected_value='Web Browser')\n\n",
 "42": "    @json_dataset('data/dataset_42.json')\n    @clear_session({'spanId': 42})\n    def test_42_get_models_roee_param_all_dataDependency(self, data_row):\n        param, = data_row\n\n        # GET http://trcc-api-service.tradmin/models/roee/{param}/all/dataDependency (endp 42)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        resp = trcc_api_service_tradmin.get(f'/models/roee/{param}/all/dataDependency')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.[*].type', expected_value='edge')\n\n",
 "43": "    @json_dataset('data/dataset_43.json')\n    @clear_session({'spanId': 43})\n    def test_43_get_models_roee_param_all_dataDependency_span(self, data_row):\n        param, = data_row\n\n        # GET http://trcc-api-service.tradmin/models/roee/{param}/all/dataDependency/span (endp 43)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        resp = trcc_api_service_tradmin.get(f'/models/roee/{param}/all/dataDependency/span')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "45": "    @json_dataset('data/dataset_45.json')\n    @clear_session({'spanId': 45})\n    def test_45_get_models_roee_har(self, data_row):\n        maxRevisionId, selectedEndpoint, services = data_row\n\n        # GET http://trcc-api-service.tradmin/models/roee/har (endp 45)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        qstr = '?' + urlencode([('fromQueue', 'false'), ('maxEntryId', ''), ('maxRevisionId', maxRevisionId), ('methods', ''), ('pathSearch', ''), ('selectedEndpoint', selectedEndpoint), ('services', services), ('sources', ''), ('statusTypes', '')])\n        resp = trcc_api_service_tradmin.get('/models/roee/har' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "44": "    @json_dataset('data/dataset_44.json')\n    @clear_session({'spanId': 44})\n    def test_44_get_models_roee_har_entry_id(self, data_row):\n        id_, = data_row\n\n        # GET http://trcc-api-service.tradmin/models/roee/har/entry/{id} (endp 44)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        qstr = '?' + urlencode([('fromQueue', 'false')])\n        resp = trcc_api_service_tradmin.get(f'/models/roee/har/entry/{id_}' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "46": "    @json_dataset('data/dataset_46.json')\n    @clear_session({'spanId': 46})\n    def test_46_get_models_roee_packs_testPackId(self, data_row):\n        testPackId, = data_row\n\n        # GET http://trcc-api-service.tradmin/models/roee/packs/{testPackId} (endp 46)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        qstr = '?' + urlencode([('metadataOnly', '1')])\n        resp = trcc_api_service_tradmin.get(f'/models/roee/packs/{testPackId}' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.tests.[*].ctype', expected_value='text/html')\n\n",
 "47": "    @clear_session({'spanId': 47})\n    def test_47_get_models_roee_revisions(self):\n        # GET http://trcc-api-service.tradmin/models/roee/revisions (endp 47)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        resp = trcc_api_service_tradmin.get('/models/roee/revisions')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "59": "    @json_dataset('data/dataset_59.json')\n    @clear_session({'spanId': 59})\n    def test_59_post_models_roee_revisions(self, data_row):\n        maxEntryId, sourceRevisionId = data_row\n\n        # POST http://trcc-api-service.tradmin/models/roee/revisions (endp 59)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        with open('data/payload_for_endp_59.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.maxEntryId', maxEntryId)\n        apply_into_json(json_payload, '$.revisionId', str(random.randint(8, 14)))\n        apply_into_json(json_payload, '$.sourceRevisionId', sourceRevisionId)\n        resp = trcc_api_service_tradmin.post('/models/roee/revisions', json=json_payload)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('p', expected_value='Ok')\n\n",
 "60": "    @clear_session({'spanId': 60})\n    def test_60_get_models_roee_revisions_latest(self):\n        # GET http://trcc-api-service.tradmin/models/roee/revisions/latest (endp 60)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        resp = trcc_api_service_tradmin.get('/models/roee/revisions/latest')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "48": "    @clear_session({'spanId': 48})\n    def test_48_get_models_roee_sources(self):\n        # GET http://trcc-api-service.tradmin/models/roee/sources (endp 48)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        resp = trcc_api_service_tradmin.get('/models/roee/sources')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "49": "    @clear_session({'spanId': 49})\n    def test_49_get_models_roee_status(self):\n        # GET http://trcc-api-service.tradmin/models/roee/status (endp 49)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        resp = trcc_api_service_tradmin.get('/models/roee/status')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "61": "    @clear_session({'spanId': 61})\n    def test_61_get_models_roee_suites(self):\n        # GET http://trcc-api-service.tradmin/models/roee/suites (endp 61)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        resp = trcc_api_service_tradmin.get('/models/roee/suites')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.[*].lastEnvInfo.profileName', expected_value='cluster')\n\n",
 "50": "    @json_dataset('data/dataset_50.json')\n    @clear_session({'spanId': 50})\n    def test_50_get_models_roee_suites_all_param(self, data_row):\n        param, = data_row\n\n        # GET http://trcc-api-service.tradmin/models/roee/suites/all/{param} (endp 50)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        resp = trcc_api_service_tradmin.get(f'/models/roee/suites/all/{param}')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.overrides.model.[*]', expected_value='drop_all_links')\n\n",
 "65": "    @json_dataset('data/dataset_65.json')\n    @clear_session({'spanId': 65})\n    def test_65_get_models_roee_suites_all_agents_agentId_profiles_cluster(self, data_row):\n        agentId, = data_row\n\n        # GET http://trcc-api-service.tradmin/models/roee/suites/all/agents/{agentId}/profiles/cluster (endp 65)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        resp = trcc_api_service_tradmin.get(f'/models/roee/suites/all/agents/{agentId}/profiles/cluster')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.name', expected_value='cluster')\n\n",
 "51": "    @clear_session({'spanId': 51})\n    def test_51_get_models_roee_suites_all_profiles(self):\n        # GET http://trcc-api-service.tradmin/models/roee/suites/all/profiles (endp 51)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        resp = trcc_api_service_tradmin.get('/models/roee/suites/all/profiles')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.[*].model', expected_value='roee')\n\n",
 "52": "    @json_dataset('data/dataset_52.json')\n    @clear_session({'spanId': 52})\n    def test_52_post_models_roee_suites_all_runs(self, data_row):\n        agentId, testPackId = data_row\n\n        # POST http://trcc-api-service.tradmin/models/roee/suites/all/runs (endp 52)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        with open('data/payload_for_endp_52.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.agentId', agentId)\n        apply_into_json(json_payload, '$.testPackId', testPackId)\n        resp = trcc_api_service_tradmin.post('/models/roee/suites/all/runs', json=json_payload)\n        resp.assert_ok()\n        # resp.assert_status_code(201)\n\n",
 "55": "    @json_dataset('data/dataset_55.json')\n    @clear_session({'spanId': 55})\n    def test_55_get_models_roee_suites_all_runs(self, data_row):\n        amount, completedOnly = data_row\n\n        # GET http://trcc-api-service.tradmin/models/roee/suites/all/runs (endp 55)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        qstr = '?' + urlencode([('amount', amount), ('completedOnly', completedOnly), ('inclusive', 'false'), ('reverse', 'false')])\n        resp = trcc_api_service_tradmin.get('/models/roee/suites/all/runs' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.[*].model', expected_value='roee')\n\n",
 "53": "    @json_dataset('data/dataset_53.json')\n    @clear_session({'spanId': 53})\n    def test_53_get_models_roee_suites_all_runs_runId(self, data_row):\n        runId, = data_row\n\n        # GET http://trcc-api-service.tradmin/models/roee/suites/all/runs/{runId} (endp 53)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        resp = trcc_api_service_tradmin.get(f'/models/roee/suites/all/runs/{runId}')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.model', expected_value='roee')\n\n",
 "66": "    @json_dataset('data/dataset_66.json')\n    @clear_session({'spanId': 66})\n    def test_66_post_models_roee_suites_all_runs_runId(self, data_row):\n        endTime, rcaDataFileName, runId, startTime, status = data_row\n\n        # POST http://trcc-api-service.tradmin/models/roee/suites/all/runs/{runId} (endp 66)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        with open('data/payload_for_endp_66.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.endTime', endTime)\n        apply_into_json(json_payload, '$.rcaDataFileName', rcaDataFileName)\n        apply_into_json(json_payload, '$.startTime', startTime)\n        apply_into_json(json_payload, '$.status', status)\n        resp = trcc_api_service_tradmin.post(f'/models/roee/suites/all/runs/{runId}', json=json_payload)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('p', expected_value='Ok')\n\n",
 "68": "    @json_dataset('data/dataset_68.json')\n    @clear_session({'spanId': 68})\n    def test_68_get_models_roee_suites_all_runs_runId_downloadTests(self, data_row):\n        runId, = data_row\n\n        # GET http://trcc-api-service.tradmin/models/roee/suites/all/runs/{runId}/downloadTests (endp 68)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        resp = trcc_api_service_tradmin.get(f'/models/roee/suites/all/runs/{runId}/downloadTests')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "69": "    @json_dataset('data/dataset_69.json')\n    @clear_session({'spanId': 69})\n    def test_69_get_models_roee_suites_all_runs_runId_uploadUrl(self, data_row):\n        fileName, runId = data_row\n\n        # GET http://trcc-api-service.tradmin/models/roee/suites/all/runs/{runId}/uploadUrl (endp 69)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        qstr = '?' + urlencode([('fileName', fileName)])\n        resp = trcc_api_service_tradmin.get(f'/models/roee/suites/all/runs/{runId}/uploadUrl' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "54": "    @clear_session({'spanId': 54})\n    def test_54_get_models_roee_suites_all_runs_state(self):\n        # GET http://trcc-api-service.tradmin/models/roee/suites/all/runs/state (endp 54)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        resp = trcc_api_service_tradmin.get('/models/roee/suites/all/runs/state')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "62": "    @clear_session({'spanId': 62})\n    def test_62_get_tapping_state(self):\n        # GET http://trcc-api-service.tradmin/tapping/state (endp 62)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        resp = trcc_api_service_tradmin.get('/tapping/state')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.[*].type', expected_value='passive')\n\n",
 "56": "    @clear_session({'spanId': 56})\n    def test_56_get_users_current(self):\n        # GET http://trcc-api-service.tradmin/users/current (endp 56)\n        trcc_api_service_tradmin = get_http_target('TARGET_TRCC_API_SERVICE_TRADMIN', authenticate)\n        resp = trcc_api_service_tradmin.get('/users/current')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "4": "    @clear_session({'spanId': 4})\n    def test_04_get_adsid_google_ui(self):\n        # GET https://adservice.google.com/adsid/google/ui (endp 4)\n        adservice_google_com = get_http_target('TARGET_ADSERVICE_GOOGLE_COM', authenticate)\n        resp = adservice_google_com.get('/adsid/google/ui')\n        resp.assert_ok()\n        # resp.assert_status_code(204)\n\n",
 "9": "    # authentication-related test\n    @json_dataset('data/dataset_9.json')\n    @clear_session({'spanId': 9})\n    def test_09_get_auth_realms_testr_protocol_openid_connect_auth(self, data_row):\n        redirect_uri, state = data_row\n\n        # GET https://auth.stg.testr.io/auth/realms/testr/protocol/openid-connect/auth (endp 9)\n        auth_stg_testr_io = get_http_target('TARGET_AUTH_STG_TESTR_IO', dummy_auth)\n        qstr = '?' + urlencode([('client_id', 'react-client'), ('redirect_uri', redirect_uri), ('response_type', 'code'), ('state', state)])\n        resp = auth_stg_testr_io.get('/auth/realms/testr/protocol/openid-connect/auth' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('a#signupLink', expected_value='Sign Up')\n\n",
 "30": "    @clear_session({'spanId': 30})\n    def test_30_get_bounce(self):\n        # GET https://ib.adnxs.com/bounce (endp 30)\n        ib_adnxs_com = get_http_target('TARGET_IB_ADNXS_COM', authenticate)\n        qstr = '?' + urlencode([('/getuid?https://www.kayak.com/s/kayakpixel/lgbl/impevent?adnxs_uid=%24UID', '')])\n        resp = ib_adnxs_com.get('/bounce' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(302)\n\n",
 "31": "    @json_dataset('data/dataset_31.json')\n    @clear_session({'spanId': 31})\n    def test_31_get_getuid(self, data_row):\n        https___www_kayak_com_s_kayakpixel_lgbl_impevent_adnxs_uid, = data_row\n\n        # GET https://ib.adnxs.com/getuid (endp 31)\n        ib_adnxs_com = get_http_target('TARGET_IB_ADNXS_COM', authenticate)\n        qstr = '?' + urlencode([('https://www.kayak.com/s/kayakpixel/lgbl/impevent?adnxs_uid', https___www_kayak_com_s_kayakpixel_lgbl_impevent_adnxs_uid)])\n        resp = ib_adnxs_com.get('/getuid' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(307)\n\n",
 "33": "    @json_dataset('data/dataset_33.json')\n    @clear_session({'spanId': 33})\n    def test_33_post_j_collect(self, data_row):\n        _gid, _r, _u, _v, cid, gjid, jid, tid, z = data_row\n\n        # POST https://stats.g.doubleclick.net/j/collect (endp 33)\n        stats_g_doubleclick_net = get_http_target('TARGET_STATS_G_DOUBLECLICK_NET', authenticate)\n        qstr = '?' + urlencode([('_gid', _gid), ('_r', _r), ('_u', _u), ('_v', _v), ('aip', '1'), ('cid', cid), ('gjid', gjid), ('jid', jid), ('t', 'dc'), ('tid', tid), ('v', '1'), ('z', z)])\n        resp = stats_g_doubleclick_net.post('/j/collect' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "28": "    @json_dataset('data/dataset_28.json')\n    @clear_session({'spanId': 28})\n    def test_28_post_j_collect(self, data_row):\n        _gid, _u, _v, a, cd13, cid, de, gjid, gtm, jid, sd, sr, tid, z = data_row\n\n        # POST https://www.google-analytics.com/j/collect (endp 28)\n        www_google_analytics_com = get_http_target('TARGET_WWW_GOOGLE_ANALYTICS_COM', authenticate)\n        qstr = '?' + urlencode([('_gid', _gid), ('_r', '1'), ('_s', '1'), ('_u', _u), ('_v', _v), ('a', a), ('aip', '1'), ('cd13', cd13), ('cid', cid), ('de', de), ('dl', '/'), ('dr', ''), ('dt', '-'), ('gjid', gjid), ('gtm', gtm), ('je', '0'), ('jid', jid), ('sd', sd), ('sr', sr), ('t', 'pageview'), ('tid', tid), ('ul', 'en-us'), ('v', '1'), ('vp', ''), ('z', z)])\n        resp = www_google_analytics_com.post('/j/collect' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "11": "    @json_dataset('data/dataset_11.json')\n    @clear_session({'spanId': 11})\n    def test_11_post_messenger_web_ping(self, data_row):\n        Idempotency_Key, app_id, g, page_title, referer, s, v = data_row\n\n        # POST https://api-iam.intercom.io/messenger/web/ping (endp 11)\n        api_iam_intercom_io = get_http_target('TARGET_API_IAM_INTERCOM_IO', authenticate)\n        resp = api_iam_intercom_io.post('/messenger/web/ping', data=[('Idempotency-Key', Idempotency_Key), ('app_id', app_id), ('g', g), ('internal', '{}'), ('page_title', page_title), ('platform', 'web'), ('r', ''), ('referer', referer), ('s', s), ('sampling', 'false'), ('source', 'apiBoot'), ('user_active_company_id', 'undefined'), ('user_data', '{}'), ('v', v)])\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.app.active_admins.[*].name', expected_value='Refael')\n\n",
 "10": "    @json_dataset('data/dataset_10.json')\n    @clear_session({'spanId': 10})\n    def test_10_get_widget_param(self, data_row):\n        param, = data_row\n\n        # GET https://widget.intercom.io/widget/{param} (endp 10)\n        widget_intercom_io = get_http_target('TARGET_WIDGET_INTERCOM_IO', authenticate)\n        resp = widget_intercom_io.get(f'/widget/{param}')\n        resp.assert_ok()\n        # resp.assert_status_code(302)\n\n",
 "3": "    @json_dataset('data/dataset_3.json')\n    @clear_session({'spanId': 3})\n    def test_03_get_widget_app_so(self, data_row):\n        origin, = data_row\n\n        # GET https://ogs.google.com/widget/app/so (endp 3)\n        ogs_google_com = get_http_target('TARGET_OGS_GOOGLE_COM', authenticate)\n        qstr = '?' + urlencode([('cn', 'app'), ('hl', 'iw'), ('origin', origin), ('pid', '1'), ('spid', '1')])\n        resp = ogs_google_com.get('/widget/app/so' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n"
}