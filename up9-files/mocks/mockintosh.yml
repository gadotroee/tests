# This is a Mockintosh configuration file.
# Mockintosh provides a microservices friendly, small footprint HTTP mock service.
# A standard laptop can run dozens of Mockintosh instances, or you can run all instances in a single Docker container.
#
# Install Mockintosh:                 pip3 install mockintosh
# Run locally:                        mockintosh <this-file>
# Run with Docker:                    docker run -it -p 8000-8005:8000-8005 -v `pwd`:/tmp testrio/mockintosh /tmp/<this-file>
# More information can be found here: https://github.com/up9inc/mockintosh

---
management:
  port: 8000
services:
- name: http://httpbin.org
  port: 8001
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___httpbin.org-spec.json'
  endpoints:
  - path: /
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_7.html'
      useTemplating: false
- name: https://auth.stg.testr.io
  port: 8002
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-https___auth.stg.testr.io-spec.json'
  endpoints:
  - path: /auth/realms/testr/protocol/openid-connect/auth
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_9.html'
      useTemplating: false
- name: https://stg.testr.io
  port: 8003
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-https___stg.testr.io-spec.json'
  endpoints:
  - path: /
    response:
      status: 302
      headers:
        Content-Type: text/html
- name: https://trdemo.stg.testr.io
  port: 8004
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-https___trdemo.stg.testr.io-spec.json'
  endpoints:
  - path: /
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_5.html'
      useTemplating: false
  - path: /login
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_6.html'
      useTemplating: false
- name: https://www.kayak.com
  port: 8005
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-https___www.kayak.com-spec.json'
  endpoints:
  - path: /
    response:
      status: 302
